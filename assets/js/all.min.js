$.fn.extend({isOnScreenVisible:function(){var e=$(window),t={top:e.scrollTop(),left:e.scrollLeft()};t.right=t.left+e.width(),t.bottom=t.top+e.height();var a=this.offset();return a.right=a.left+this.outerWidth(),a.bottom=a.top+this.outerHeight(),!(t.right<a.left||t.left>a.right||t.bottom<a.top||t.top>a.bottom)}});var scrollme=function(e){var t={},a=e(document),o=e(window);return t.body_height=0,t.viewport_height=0,t.viewport_top=0,t.viewport_bottom=0,t.viewport_top_previous=-1,t.elements=[],t.elements_in_view=[],t.property_defaults={opacity:1,translatex:0,translatey:0,translatez:0,rotatex:0,rotatey:0,rotatez:0,scale:1,scalex:1,scaley:1,scalez:1},t.scrollme_selector=".scrollme",t.animateme_selector=".animateme",t.update_interval=10,t.easing_functions={linear:function(e){return e},easeout:function(e){return e*e*e},easein:function(e){return e=1-e,1-e*e*e},easeinout:function(e){return.5>e?4*e*e*e:(e=1-e,1-4*e*e*e)}},t.init_events=["ready","page:load","page:change"],t.init_if=function(){return!0},t.init=function(){return t.init_if()?(t.init_elements(),t.on_resize(),o.on("resize orientationchange",function(){t.on_resize()}),o.load(function(){setTimeout(function(){t.on_resize()},100)}),setInterval(t.update,t.update_interval),!0):!1},t.init_elements=function(){e(t.scrollme_selector).each(function(){var a={};a.element=e(this);var o=[];e(this).find(t.animateme_selector).addBack(t.animateme_selector).each(function(){var a={};a.element=e(this),a.when=a.element.data("when"),a.from=a.element.data("from"),a.to=a.element.data("to"),a.element.is("[data-crop]")?a.crop=a.element.data("crop"):a.crop=!0,a.element.is("[data-easing]")?a.easing=t.easing_functions[a.element.data("easing")]:a.easing=t.easing_functions.easeout;var i={};a.element.is("[data-opacity]")&&(i.opacity=a.element.data("opacity")),a.element.is("[data-translatex]")&&(i.translatex=a.element.data("translatex")),a.element.is("[data-translatey]")&&(i.translatey=a.element.data("translatey")),a.element.is("[data-translatez]")&&(i.translatez=a.element.data("translatez")),a.element.is("[data-rotatex]")&&(i.rotatex=a.element.data("rotatex")),a.element.is("[data-rotatey]")&&(i.rotatey=a.element.data("rotatey")),a.element.is("[data-rotatez]")&&(i.rotatez=a.element.data("rotatez")),a.element.is("[data-scale]")&&(i.scale=a.element.data("scale")),a.element.is("[data-scalex]")&&(i.scalex=a.element.data("scalex")),a.element.is("[data-scaley]")&&(i.scaley=a.element.data("scaley")),a.element.is("[data-scalez]")&&(i.scalez=a.element.data("scalez")),a.properties=i,o.push(a)}),a.effects=o,t.elements.push(a)})},t.update=function(){window.requestAnimationFrame(function(){t.update_viewport_position(),t.viewport_top_previous!=t.viewport_top&&(t.update_elements_in_view(),t.animate()),t.viewport_top_previous=t.viewport_top})},t.animate=function(){for(var e=t.elements_in_view.length,a=0;e>a;a++)for(var o=t.elements_in_view[a],i=o.effects.length,n=0;i>n;n++){var s=o.effects[n];switch(s.when){case"view":case"span":var l=o.top-t.viewport_height,r=o.bottom;break;case"exit":var l=o.bottom-t.viewport_height,r=o.bottom;break;default:var l=o.top-t.viewport_height,r=o.top}s.crop&&(0>l&&(l=0),r>t.body_height-t.viewport_height&&(r=t.body_height-t.viewport_height));var c=(t.viewport_top-l)/(r-l),d=s.from,m=s.to,p=m-d,h=(c-d)/p,u=s.easing(h),f=t.animate_value(c,u,d,m,s,"opacity"),v=t.animate_value(c,u,d,m,s,"translatey"),g=t.animate_value(c,u,d,m,s,"translatex"),_=t.animate_value(c,u,d,m,s,"translatez"),w=t.animate_value(c,u,d,m,s,"rotatex"),$=t.animate_value(c,u,d,m,s,"rotatey"),b=t.animate_value(c,u,d,m,s,"rotatez"),y=t.animate_value(c,u,d,m,s,"scale"),x=t.animate_value(c,u,d,m,s,"scalex"),z=t.animate_value(c,u,d,m,s,"scaley"),k=t.animate_value(c,u,d,m,s,"scalez");"scale"in s.properties&&(x=y,z=y,k=y),s.element.css({opacity:f,transform:"translate3d( "+g+"px , "+v+"px , "+_+"px ) rotateX( "+w+"deg ) rotateY( "+$+"deg ) rotateZ( "+b+"deg ) scale3d( "+x+" , "+z+" , "+k+" )","-webkit-transform":"translate3d( "+g+"px , "+v+"px , "+_+"px ) rotateX( "+w+"deg ) rotateY( "+$+"deg ) rotateZ( "+b+"deg ) scale3d( "+x+" , "+z+" , "+k+" )"})}},t.animate_value=function(e,a,o,i,n,s){var l=t.property_defaults[s];if(!(s in n.properties))return l;var r=n.properties[s],c=i>o?!0:!1;if(o>e&&c)return l;if(e>i&&c)return r;if(e>o&&!c)return l;if(i>e&&!c)return r;var d=l+a*(r-l);switch(s){case"opacity":d=d.toFixed(2);break;case"translatex":d=d.toFixed(0);break;case"translatey":d=d.toFixed(0);break;case"translatez":d=d.toFixed(0);break;case"rotatex":d=d.toFixed(1);break;case"rotatey":d=d.toFixed(1);break;case"rotatez":d=d.toFixed(1);break;case"scale":d=d.toFixed(3)}return d},t.update_viewport_position=function(){t.viewport_top=o.scrollTop(),t.viewport_bottom=t.viewport_top+t.viewport_height},t.update_elements_in_view=function(){t.elements_in_view=[];for(var e=t.elements.length,a=0;e>a;a++)t.elements[a].top<t.viewport_bottom&&t.elements[a].bottom>t.viewport_top&&t.elements_in_view.push(t.elements[a])},t.on_resize=function(){t.update_viewport(),t.update_element_heights(),t.update_viewport_position(),t.update_elements_in_view(),t.animate()},t.update_viewport=function(){t.body_height=a.height(),t.viewport_height=o.height()},t.update_element_heights=function(){for(var e=t.elements.length,a=0;e>a;a++){var o=t.elements[a].element.outerHeight(),i=t.elements[a].element.offset();t.elements[a].height=o,t.elements[a].top=i.top,t.elements[a].bottom=i.top+o}},a.on(t.init_events.join(" "),function(){t.init()}),t},Duoshuo={dataThreadKey:location.protocol+"//"+location.host+location.pathname,init:function(){Duoshuo.toggleBox()},toggleBox:function(){$(".toggle-comment").on("click",function(e){if($(".comment-area").has("div").length>0)return void $(".comment-area").empty();var t=document.createElement("div");t.setAttribute("data-thread-key",Duoshuo.dataThreadKey),t.setAttribute("data-url",location.href),t.setAttribute("data-title",$("title").html()),DUOSHUO.EmbedThread(t),$(".comment-area").append(t),$(".comment-area").has("div").length>0&&setTimeout(function(){$(".comment-area").addClass("toggle-up")},500),setTimeout(function(){1==$(".comment-area").isOnScreenVisible()&&$(".toggle-comment").addClass("animated fadeOut").fadeOut(500)},1e3)})}},General={isWeixin:!1,init:function(){General.scrollToPos(),General.checkKey(),General.updateImageWidth();var e=navigator.userAgent.toLowerCase();"micromessenger"==e.match(/MicroMessenger/i)&&(General.isWeixin=!0)},checkKey:function(e){e=e||window.event,"74"==e.keyCode?(console.log("按下键盘"),$("html,body").stop(),$("html,body").animate({scrollTop:$(window).stop().scrollTop()+200},"fast")):"75"==e.keyCode&&($("html,body").stop(),$("html,body").animate({scrollTop:$(window).stop().scrollTop()-200},"fast"))},updateImageWidth:function(){function e(){var e=$(this),t=a.outerWidth(),o=this.naturalWidth;o>=t?e.addClass("full-img"):e.removeClass("full-img")}function t(){o.each(e)}var a=$(".post-content");a.fitVids();var o=$(".single-post-inner img").on("load",e);t()},urlIconlize:function(e){var t,a,o={twitter:"icon-twitter",qzone:"icon-qzone",weibo:"icon-weibo",facebook:"icon-facebook",github:"icon-github",douban:"icon-douban",google:"icon-google",luolei:"icon-luolei",dribble:"icon-dribble"};for(var i in o)if("function"!=typeof o[i]){var n=i;e.indexOf(n)>=0&&(t=n,a=o[n])}return a},addIcons:function(){$(".single-post-inner p a:not(:has(img))").each(function(e){var t=$(this).attr("href"),a=document.createElement("a");a.href=t,_selfDomain=a.hostname,General.urlIconlize(_selfDomain),console.log(_selfDomain),$(this).prepend('<i class="iconfont '+General.urlIconlize(_selfDomain)+'"></i>');var o=$(this).find("i").css("color"),i=$(this).css("color");$(this).hover(function(){$(this).css("color",o),$(this).addClass("animated pulse")},function(){$(this).css("color",i),$(this).removeClass("animated pulse")})})},scrollToPos:function(e){var t="我要飞到最高",a=e||$(window).height(),o=$('<a href="#" id="to-top" title="'+t+'"> <div class="to-top-wrap"></div></a>').appendTo("body");$(window).scroll(function(){$(window).scrollTop()>$(window).height()?o.fadeIn(500):o.fadeOut(500)}),o.click(function(e){e.preventDefault(),$(window).width()>768?$("html,body").animate({scrollTop:0},600,function(){window.location.hash="#"}):$("html,body").animate({scrollTop:a-100},600,function(){window.location.hash="#"}),console.log("我跳")})},resize:function(){visualContainerWidh=$(window).width()}};$(document).ready(function(){General.init(),0==General.isWeixin&&$(window).width()>768&&(console.log("只有大屏和微信上才出动画"),scrollme($)),$("body").hasClass("post-template")&&(General.updateImageWidth(),$('img[alt="cover"]').addClass("cover-image"),General.addIcons(),$(".share h4").on("click",function(){$(this).fadeOut(20),$(".share-icons").css("display","block").addClass("fadeIn animated")}),Duoshuo.init(),$(".single-post-inner p:has(img)").each(function(){var e=$(this);e.addClass("with-img"),1==e.isOnScreenVisible()&&e.addClass("with-img").addClass("already-visible")})),($("body").hasClass("archive-template")||$("body").hasClass("home-template"))&&($(window).width()>768,$(".post-in-list").each(function(){var e=$(this);1==e.isOnScreenVisible()&&e.addClass("already-visible")}),$(".post-excerpt").each(function(){var e=$(this);0==e.has("img").length?(console.log("没有图片"),e.append('<img src="https://luoleiorg.b0.upaiyun.com/tmp/nev-set.jpg"></img>')):console.log("With")})),$(".arrow_down").click(function(){return $("html,body").animate({scrollTop:$(window).height()-20},1e3,function(){}),!1}),$(window).scroll(function(){$(window).scrollTop()>50,$("body").hasClass("post-template")&&(0==$(".share-icons").isOnScreenVisible()&&($(".share-icons").removeClass("fadeInUpBig animated").css("display","none"),$(".share h4").css("display","block")),1==General.isWeixin&&1==$(".copyright").isOnScreenVisible()&&(console.log("显示了"),$(".wechat-notice").css("display","block").addClass("fadeInUpBig animated"))),($("body").hasClass("archive-template")||$("body").hasClass("home-template"))&&$(".post-in-list").each(function(){var e=$(this);1==e.isOnScreenVisible()&&1!=e.hasClass("already-visible")})})});
//# sourceMappingURL=data:application/json;base64,