$.fn.extend({isOnScreenVisible:function(){var o=$(window),e={top:o.scrollTop(),left:o.scrollLeft()};e.right=e.left+o.width(),e.bottom=e.top+o.height();var t=this.offset();return t.right=t.left+this.outerWidth(),t.bottom=t.top+this.outerHeight(),!(e.right<t.left||e.left>t.right||e.bottom<t.top||e.top>t.bottom)}});var Duoshuo={dataThreadKey:location.protocol+"//"+location.host+location.pathname,init:function(){Duoshuo.toggleBox()},toggleBox:function(){$(".toggle-comment").on("click",function(){if($(".comment-area").has("div").length>0)return void $(".comment-area").empty();var o=document.createElement("div");o.setAttribute("data-thread-key",Duoshuo.dataThreadKey),o.setAttribute("data-url",location.href),DUOSHUO.EmbedThread(o),$(".comment-area").append(o),setTimeout(function(){$(".comment-area").addClass("toggle-up")},500),setTimeout(function(){1==$(".comment-area").isOnScreenVisible()&&$(".toggle-comment").addClass("animated fadeOut").fadeOut(500)},1e3)})}},General={init:function(){General.scrollToPos(),General.checkKey(),General.updateImageWidth()},checkKey:function(o){o=o||window.event,"74"==o.keyCode?(console.log("按下键盘"),$("html,body").stop(),$("html,body").animate({scrollTop:$(window).stop().scrollTop()+200},"fast")):"75"==o.keyCode&&($("html,body").stop(),$("html,body").animate({scrollTop:$(window).stop().scrollTop()-200},"fast"))},updateImageWidth:function(){function o(){var o=$(this),e=t.outerWidth(),i=this.naturalWidth;i>=e?o.addClass("full-img"):o.removeClass("full-img")}function e(){i.each(o)}var t=$(".post-content");t.fitVids();var i=$(".single-post-inner img").on("load",o);e()},urlIconlize:function(o){var e,t,i={twitter:"icon-twitter",qzone:"icon-qzone",weibo:"icon-weibo",facebook:"icon-facebook",github:"icon-github",douban:"icon-douban",google:"icon-google",luolei:"icon-luolei",dribble:"icon-dribble"};for(var n in i)if("function"!=typeof i[n]){var a=n;o.indexOf(a)>=0&&(e=a,t=i[a])}return t},addIcons:function(){$(".single-post-inner p a:not(:has(img))").each(function(){var o=$(this).attr("href"),e=document.createElement("a");e.href=o,_selfDomain=e.hostname,General.urlIconlize(_selfDomain),console.log(_selfDomain),$(this).prepend('<i class="iconfont '+General.urlIconlize(_selfDomain)+'"></i>');var t=$(this).find("i").css("color"),i=$(this).css("color");$(this).hover(function(){$(this).css("color",t),$(this).addClass("animated pulse")},function(){$(this).css("color",i),$(this).removeClass("animated pulse")})})},scrollToPos:function(o){var e="我要飞到最高",t=o||$(window).height(),i=$('<a href="#" id="to-top" title="'+e+'"> <div class="to-top-wrap"></div></a>').appendTo("body");$(window).scroll(function(){$(window).scrollTop()>$(window).height()?i.fadeIn(500):i.fadeOut(500)}),i.click(function(o){o.preventDefault(),$("html,body").animate({scrollTop:t-50},1e3,function(){window.location.hash="#"}),console.log("我跳")})},resize:function(){visualContainerWidh=$(window).width()}};$(document).ready(function(){General.init(),General.updateImageWidth(),Duoshuo.init(),$(".single-post-inner p:has(img)").each(function(){var o=$(this);o.addClass("with-img"),1==o.isOnScreenVisible()&&o.addClass("with-img").addClass("already-visible")}),$(".post-in-list").each(function(){var o=$(this);1==o.isOnScreenVisible()&&o.addClass("already-visible")}),$(".share h4").on("click",function(){$(".share-icons").css("display","block").addClass("fadeInUpBig animated"),$(this).fadeOut(500)}),$("body").hasClass("post-template")&&($('img[alt="cover"]').addClass("cover-image"),General.addIcons(),$(".arrow_down").click(function(){return console.log("下滑"),$("html,body").animate({scrollTop:$(window).height()-20},1e3,function(){}),!1})),($("body").hasClass("archive-template")||$("body").hasClass("home-template"))&&$(".post-excerpt").each(function(){var o=$(this);0==o.has("img").length?(console.log("没有图片"),o.append('<img src="https://luoleiorg.b0.upaiyun.com/tmp/nev-set.jpg"></img>')):console.log("With")}),$(window).scroll(function(){$(window).scrollTop()>50,0==$(".share-icons").isOnScreenVisible()&&($(".share-icons").removeClass("fadeInUpBig animated").css("display","none"),$(".share h4").css("display","block")),($("body").hasClass("archive-template")||$("body").hasClass("home-template"))&&$(".post-in-list").each(function(){var o=$(this);1==o.isOnScreenVisible()&&1!=o.hasClass("already-visible")&&o.addClass("fadeInUpBig animated")})})});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UuanMiXSwibmFtZXMiOlsiJCIsImZuIiwiZXh0ZW5kIiwiaXNPblNjcmVlblZpc2libGUiLCJ3aW4iLCJ3aW5kb3ciLCJ2aWV3cG9ydCIsInRvcCIsInNjcm9sbFRvcCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwicmlnaHQiLCJ3aWR0aCIsImJvdHRvbSIsImhlaWdodCIsImJvdW5kcyIsInRoaXMiLCJvZmZzZXQiLCJvdXRlcldpZHRoIiwib3V0ZXJIZWlnaHQiLCJEdW9zaHVvIiwiZGF0YVRocmVhZEtleSIsImxvY2F0aW9uIiwicHJvdG9jb2wiLCJob3N0IiwicGF0aG5hbWUiLCJpbml0IiwidG9nZ2xlQm94Iiwib24iLCJoYXMiLCJsZW5ndGgiLCJlbXB0eSIsImVsIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiaHJlZiIsIkRVT1NIVU8iLCJFbWJlZFRocmVhZCIsImFwcGVuZCIsInNldFRpbWVvdXQiLCJhZGRDbGFzcyIsImZhZGVPdXQiLCJHZW5lcmFsIiwic2Nyb2xsVG9Qb3MiLCJjaGVja0tleSIsInVwZGF0ZUltYWdlV2lkdGgiLCJlIiwiZXZlbnQiLCJrZXlDb2RlIiwiY29uc29sZSIsImxvZyIsInN0b3AiLCJhbmltYXRlIiwiJHRoaXMiLCJjb250ZW50V2lkdGgiLCIkcG9zdENvbnRlbnQiLCJpbWFnZVdpZHRoIiwibmF0dXJhbFdpZHRoIiwicmVtb3ZlQ2xhc3MiLCJjYXNwZXJGdWxsSW1nIiwiJGltZyIsImVhY2giLCJmaXRWaWRzIiwidXJsSWNvbmxpemUiLCJ1cmwiLCJkb21haW4iLCJfb3V0cHV0IiwiaWNvbk1hcCIsInR3aXR0ZXIiLCJxem9uZSIsIndlaWJvIiwiZmFjZWJvb2siLCJnaXRodWIiLCJkb3ViYW4iLCJnb29nbGUiLCJsdW9sZWkiLCJkcmliYmxlIiwibmFtZSIsIk1hcEtleSIsImluZGV4T2YiLCJhZGRJY29ucyIsIl9zcmMiLCJhdHRyIiwidG1wIiwiX3NlbGZEb21haW4iLCJob3N0bmFtZSIsInByZXBlbmQiLCJfc2VsZkNvbG9yIiwiZmluZCIsImNzcyIsIl9vcmlnaW5hbENvbG9yIiwiaG92ZXIiLCJwb3NpdGlvbiIsIlNUUl9UT19UT1AiLCJjb3ZlckhlaWdodCIsImJ1dHRvbiIsImFwcGVuZFRvIiwic2Nyb2xsIiwiZmFkZUluIiwiY2xpY2siLCJwcmV2ZW50RGVmYXVsdCIsImhhc2giLCJyZXNpemUiLCJ2aXN1YWxDb250YWluZXJXaWRoIiwicmVhZHkiLCJfdGhpcyIsImhhc0NsYXNzIl0sIm1hcHBpbmdzIjoiQUFBQUEsRUFBRUMsR0FBR0MsUUFDREMsa0JBQW1CLFdBQ2YsR0FBSUMsR0FBTUosRUFBRUssUUFDUkMsR0FDQUMsSUFBS0gsRUFBSUksWUFDVEMsS0FBTUwsRUFBSU0sYUFFZEosR0FBU0ssTUFBUUwsRUFBU0csS0FBT0wsRUFBSVEsUUFDckNOLEVBQVNPLE9BQVNQLEVBQVNDLElBQU1ILEVBQUlVLFFBRXJDLElBQUlDLEdBQVNDLEtBQUtDLFFBSWxCLE9BSEFGLEdBQU9KLE1BQVFJLEVBQU9OLEtBQU9PLEtBQUtFLGFBQ2xDSCxFQUFPRixPQUFTRSxFQUFPUixJQUFNUyxLQUFLRyxnQkFFeEJiLEVBQVNLLE1BQVFJLEVBQU9OLE1BQVFILEVBQVNHLEtBQU9NLEVBQU9KLE9BQVNMLEVBQVNPLE9BQVNFLEVBQU9SLEtBQU9ELEVBQVNDLElBQU1RLEVBQU9GLFVBS3hJLElBQUlPLFVBRUFDLGNBQWVDLFNBQVNDLFNBQVcsS0FBT0QsU0FBU0UsS0FBT0YsU0FBU0csU0FFbkVDLEtBQU0sV0FDRk4sUUFBUU8sYUFHWkEsVUFBVyxXQUVQM0IsRUFBRSxtQkFBbUI0QixHQUFHLFFBQVMsV0FFN0IsR0FBSTVCLEVBQUUsaUJBQWlCNkIsSUFBSSxPQUFPQyxPQUFTLEVBRXZDLFdBREE5QixHQUFFLGlCQUFpQitCLE9BR3ZCLElBQUlDLEdBQUtDLFNBQVNDLGNBQWMsTUFDaENGLEdBQUdHLGFBQWEsa0JBQW1CZixRQUFRQyxlQUMzQ1csRUFBR0csYUFBYSxXQUFZYixTQUFTYyxNQUNyQ0MsUUFBUUMsWUFBWU4sR0FDcEJoQyxFQUFFLGlCQUFpQnVDLE9BQU9QLEdBRTFCUSxXQUFXLFdBQ1B4QyxFQUFFLGlCQUFpQnlDLFNBQVMsY0FDN0IsS0FHSEQsV0FBVyxXQUN1QyxHQUExQ3hDLEVBQUUsaUJBQWlCRyxxQkFDbkJILEVBQUUsbUJBQW1CeUMsU0FBUyxvQkFBb0JDLFFBQVEsTUFFL0QsU0FZWEMsU0FDQWpCLEtBQU0sV0FDRmlCLFFBQVFDLGNBQ1JELFFBQVFFLFdBQ1JGLFFBQVFHLG9CQUlaRCxTQUFVLFNBQVNFLEdBQ2ZBLEVBQUlBLEdBQUsxQyxPQUFPMkMsTUFDQyxNQUFiRCxFQUFFRSxTQUNGQyxRQUFRQyxJQUFJLFFBQ1puRCxFQUFFLGFBQWFvRCxPQUNmcEQsRUFBRSxhQUFhcUQsU0FDWDdDLFVBQVdSLEVBQUVLLFFBQVErQyxPQUFPNUMsWUFBYyxLQUMzQyxTQUNpQixNQUFidUMsRUFBRUUsVUFDVGpELEVBQUUsYUFBYW9ELE9BQ2ZwRCxFQUFFLGFBQWFxRCxTQUNYN0MsVUFBV1IsRUFBRUssUUFBUStDLE9BQU81QyxZQUFjLEtBQzNDLFVBSVhzQyxpQkFBa0IsV0FJZCxRQUFTQSxLQUNMLEdBQUlRLEdBQVF0RCxFQUFFZ0IsTUFDVnVDLEVBQWVDLEVBQWF0QyxhQUM1QnVDLEVBQWF6QyxLQUFLMEMsWUFFbEJELElBQWNGLEVBQ2RELEVBQU1iLFNBQVMsWUFFZmEsRUFBTUssWUFBWSxZQU0xQixRQUFTQyxLQUNMQyxFQUFLQyxLQUFLaEIsR0FsQmQsR0FBSVUsR0FBZXhELEVBQUUsZ0JBQ3JCd0QsR0FBYU8sU0FjYixJQUFJRixHQUFPN0QsRUFBRSwwQkFBMEI0QixHQUFHLE9BQVFrQixFQU1sRGMsTUFJSkksWUFBYSxTQUFTQyxHQUNsQixHQUFJQyxHQUNBQyxFQUNBQyxHQUNBQyxRQUFXLGVBQ1hDLE1BQVMsYUFDVEMsTUFBUyxhQUNUQyxTQUFZLGdCQUNaQyxPQUFVLGNBQ1ZDLE9BQVUsY0FDVkMsT0FBVSxjQUNWQyxPQUFVLGNBQ1ZDLFFBQVcsZUFJZixLQUFLLEdBQUlDLEtBQVFWLEdBQ2IsR0FBNkIsa0JBQWxCQSxHQUFRVSxHQUFzQixDQUNyQyxHQUFJQyxHQUFTRCxDQUNUYixHQUFJZSxRQUFRRCxJQUFXLElBQ3ZCYixFQUFTYSxFQUNUWixFQUFVQyxFQUFRVyxJQUs5QixNQUFPWixJQUdYYyxTQUFVLFdBRU5qRixFQUFFLHlDQUF5QzhELEtBQUssV0FDNUMsR0FBSW9CLEdBQU9sRixFQUFFZ0IsTUFBTW1FLEtBQUssUUFDcEJDLEVBQU1uRCxTQUFTQyxjQUFjLElBQ2pDa0QsR0FBSWhELEtBQU84QyxFQUNYRyxZQUFjRCxFQUFJRSxTQUNsQjNDLFFBQVFxQixZQUFZcUIsYUFDcEJuQyxRQUFRQyxJQUFJa0MsYUFFWnJGLEVBQUVnQixNQUFNdUUsUUFBUSxzQkFBd0I1QyxRQUFRcUIsWUFBWXFCLGFBQWUsU0FDM0UsSUFBSUcsR0FBYXhGLEVBQUVnQixNQUFNeUUsS0FBSyxLQUFLQyxJQUFJLFNBQ25DQyxFQUFpQjNGLEVBQUVnQixNQUFNMEUsSUFBSSxRQUdqQzFGLEdBQUVnQixNQUFNNEUsTUFBTSxXQUNWNUYsRUFBRWdCLE1BQU0wRSxJQUFJLFFBQVNGLEdBQ3JCeEYsRUFBRWdCLE1BQU15QixTQUFTLG1CQUNsQixXQUNDekMsRUFBRWdCLE1BQU0wRSxJQUFJLFFBQVNDLEdBQ3JCM0YsRUFBRWdCLE1BQU0yQyxZQUFZLHVCQU9oQ2YsWUFBYSxTQUFTaUQsR0FDbEIsR0FBSUMsR0FBYSxTQUNiQyxFQUFjRixHQUFZN0YsRUFBRUssUUFBUVMsU0FDcENrRixFQUFTaEcsRUFBRSxrQ0FBb0M4RixFQUFhLDBDQUEwQ0csU0FBUyxPQUNuSGpHLEdBQUVLLFFBQVE2RixPQUFPLFdBQ1RsRyxFQUFFSyxRQUFRRyxZQUFjUixFQUFFSyxRQUFRUyxTQUNsQ2tGLEVBQU9HLE9BQU8sS0FFZEgsRUFBT3RELFFBQVEsT0FJdkJzRCxFQUFPSSxNQUFNLFNBQVNyRCxHQUNsQkEsRUFBRXNELGlCQUNGckcsRUFBRSxhQUFhcUQsU0FDWDdDLFVBQVd1RixFQUFjLElBQzFCLElBQU0sV0FDTDFGLE9BQU9pQixTQUFTZ0YsS0FBTyxNQUUzQnBELFFBQVFDLElBQUksU0FJcEJvRCxPQUFRLFdBQ0pDLG9CQUFzQnhHLEVBQUVLLFFBQVFPLFNBYXhDWixHQUFFaUMsVUFBVXdFLE1BQU0sV0FDZDlELFFBQVFqQixPQUNSaUIsUUFBUUcsbUJBRVIxQixRQUFRTSxPQUlSMUIsRUFBRSxpQ0FBaUM4RCxLQUFLLFdBQ3BDLEdBQUk0QyxHQUFRMUcsRUFBRWdCLEtBQ2QwRixHQUFNakUsU0FBUyxZQUVrQixHQUE3QmlFLEVBQU12RyxxQkFDTnVHLEVBQU1qRSxTQUFTLFlBQVlBLFNBQVMscUJBUzVDekMsRUFBRSxpQkFBaUI4RCxLQUFLLFdBQ3BCLEdBQUk0QyxHQUFRMUcsRUFBRWdCLEtBQ21CLElBQTdCMEYsRUFBTXZHLHFCQUNOdUcsRUFBTWpFLFNBQVMscUJBR3ZCekMsRUFBRSxhQUFhNEIsR0FBRyxRQUFTLFdBQ3ZCNUIsRUFBRSxnQkFBZ0IwRixJQUFJLFVBQVcsU0FBU2pELFNBQVMsd0JBQ25EekMsRUFBRWdCLE1BQU0wQixRQUFRLE9BZ0JoQjFDLEVBQUUsUUFBUTJHLFNBQVMsbUJBRW5CM0csRUFBRSxvQkFBb0J5QyxTQUFTLGVBQy9CRSxRQUFRc0MsV0FFUmpGLEVBQUUsZUFBZW9HLE1BQU0sV0FPbkIsTUFOQWxELFNBQVFDLElBQUksTUFDWm5ELEVBQUUsYUFBYXFELFNBQ1g3QyxVQUFXUixFQUFFSyxRQUFRUyxTQUFXLElBQ2pDLElBQU0sZUFHRixNQUlYZCxFQUFFLFFBQVEyRyxTQUFTLHFCQUF1QjNHLEVBQUUsUUFBUTJHLFNBQVMsbUJBQzdEM0csRUFBRSxpQkFBaUI4RCxLQUFLLFdBQ3BCLEdBQUk0QyxHQUFRMUcsRUFBRWdCLEtBQ2lCLElBQTNCMEYsRUFBTTdFLElBQUksT0FBT0MsUUFDakJvQixRQUFRQyxJQUFJLFFBQ1p1RCxFQUFNbkUsT0FBTyx1RUFFYlcsUUFBUUMsSUFBSSxVQVF4Qm5ELEVBQUVLLFFBQVE2RixPQUFPLFdBRVRsRyxFQUFFSyxRQUFRRyxZQUFjLEdBSWlCLEdBQXpDUixFQUFFLGdCQUFnQkcsc0JBQ2xCSCxFQUFFLGdCQUFnQjJELFlBQVksd0JBQXdCK0IsSUFBSSxVQUFXLFFBQ3JFMUYsRUFBRSxhQUFhMEYsSUFBSSxVQUFXLFdBRzlCMUYsRUFBRSxRQUFRMkcsU0FBUyxxQkFBdUIzRyxFQUFFLFFBQVEyRyxTQUFTLG1CQUM3RDNHLEVBQUUsaUJBQWlCOEQsS0FBSyxXQUNwQixHQUFJNEMsR0FBUTFHLEVBQUVnQixLQUNtQixJQUE3QjBGLEVBQU12RyxxQkFBb0UsR0FBckN1RyxFQUFNQyxTQUFTLG9CQUNwREQsRUFBTWpFLFNBQVMiLCJmaWxlIjoiYWxsLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQuZm4uZXh0ZW5kKHtcbiAgICBpc09uU2NyZWVuVmlzaWJsZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciB3aW4gPSAkKHdpbmRvdyk7XG4gICAgICAgIHZhciB2aWV3cG9ydCA9IHtcbiAgICAgICAgICAgIHRvcDogd2luLnNjcm9sbFRvcCgpLFxuICAgICAgICAgICAgbGVmdDogd2luLnNjcm9sbExlZnQoKVxuICAgICAgICB9O1xuICAgICAgICB2aWV3cG9ydC5yaWdodCA9IHZpZXdwb3J0LmxlZnQgKyB3aW4ud2lkdGgoKTtcbiAgICAgICAgdmlld3BvcnQuYm90dG9tID0gdmlld3BvcnQudG9wICsgd2luLmhlaWdodCgpO1xuXG4gICAgICAgIHZhciBib3VuZHMgPSB0aGlzLm9mZnNldCgpO1xuICAgICAgICBib3VuZHMucmlnaHQgPSBib3VuZHMubGVmdCArIHRoaXMub3V0ZXJXaWR0aCgpO1xuICAgICAgICBib3VuZHMuYm90dG9tID0gYm91bmRzLnRvcCArIHRoaXMub3V0ZXJIZWlnaHQoKTtcblxuICAgICAgICByZXR1cm4gKCEodmlld3BvcnQucmlnaHQgPCBib3VuZHMubGVmdCB8fCB2aWV3cG9ydC5sZWZ0ID4gYm91bmRzLnJpZ2h0IHx8IHZpZXdwb3J0LmJvdHRvbSA8IGJvdW5kcy50b3AgfHwgdmlld3BvcnQudG9wID4gYm91bmRzLmJvdHRvbSkpO1xuICAgIH1cbn0pO1xuXG5cbnZhciBEdW9zaHVvID0ge1xuXG4gICAgZGF0YVRocmVhZEtleTogbG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgbG9jYXRpb24uaG9zdCArIGxvY2F0aW9uLnBhdGhuYW1lLFxuXG4gICAgaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIER1b3NodW8udG9nZ2xlQm94KCk7XG4gICAgfSxcblxuICAgIHRvZ2dsZUJveDogZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgJCgnLnRvZ2dsZS1jb21tZW50Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oY29udGFpbmVyKSB7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygn5byA5ZCv6K+E6K66Jyk7XG4gICAgICAgICAgICBpZiAoJCgnLmNvbW1lbnQtYXJlYScpLmhhcygnZGl2JykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICQoJy5jb21tZW50LWFyZWEnKS5lbXB0eSgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgZWwuc2V0QXR0cmlidXRlKCdkYXRhLXRocmVhZC1rZXknLCBEdW9zaHVvLmRhdGFUaHJlYWRLZXkpO1xuICAgICAgICAgICAgZWwuc2V0QXR0cmlidXRlKCdkYXRhLXVybCcsIGxvY2F0aW9uLmhyZWYpO1xuICAgICAgICAgICAgRFVPU0hVTy5FbWJlZFRocmVhZChlbCk7XG4gICAgICAgICAgICAkKCcuY29tbWVudC1hcmVhJykuYXBwZW5kKGVsKTtcblxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAkKCcuY29tbWVudC1hcmVhJykuYWRkQ2xhc3MoJ3RvZ2dsZS11cCcpO1xuICAgICAgICAgICAgfSwgNTAwKVxuXG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgaWYgKCQoJy5jb21tZW50LWFyZWEnKS5pc09uU2NyZWVuVmlzaWJsZSgpID09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgJCgnLnRvZ2dsZS1jb21tZW50JykuYWRkQ2xhc3MoJ2FuaW1hdGVkIGZhZGVPdXQnKS5mYWRlT3V0KDUwMClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCAxMDAwKVxuXG5cblxuICAgICAgICB9KVxuXG4gICAgfVxufVxuXG5cblxuXG52YXIgR2VuZXJhbCA9IHtcbiAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgR2VuZXJhbC5zY3JvbGxUb1BvcygpO1xuICAgICAgICBHZW5lcmFsLmNoZWNrS2V5KCk7XG4gICAgICAgIEdlbmVyYWwudXBkYXRlSW1hZ2VXaWR0aCgpO1xuICAgIH0sXG5cbiAgICAvL+aooeaLn+m8oOagh+S4iuS4i+a7muWKqFxuICAgIGNoZWNrS2V5OiBmdW5jdGlvbihlKSB7XG4gICAgICAgIGUgPSBlIHx8IHdpbmRvdy5ldmVudDtcbiAgICAgICAgaWYgKGUua2V5Q29kZSA9PSAnNzQnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn5oyJ5LiL6ZSu55uYJyk7XG4gICAgICAgICAgICAkKCdodG1sLGJvZHknKS5zdG9wKCk7XG4gICAgICAgICAgICAkKCdodG1sLGJvZHknKS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICBzY3JvbGxUb3A6ICQod2luZG93KS5zdG9wKCkuc2Nyb2xsVG9wKCkgKyAyMDBcbiAgICAgICAgICAgIH0sICdmYXN0JylcbiAgICAgICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT0gJzc1Jykge1xuICAgICAgICAgICAgJCgnaHRtbCxib2R5Jykuc3RvcCgpO1xuICAgICAgICAgICAgJCgnaHRtbCxib2R5JykuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgICAgc2Nyb2xsVG9wOiAkKHdpbmRvdykuc3RvcCgpLnNjcm9sbFRvcCgpIC0gMjAwXG4gICAgICAgICAgICB9LCAnZmFzdCcpXG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgdXBkYXRlSW1hZ2VXaWR0aDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciAkcG9zdENvbnRlbnQgPSAkKFwiLnBvc3QtY29udGVudFwiKTtcbiAgICAgICAgJHBvc3RDb250ZW50LmZpdFZpZHMoKTtcblxuICAgICAgICBmdW5jdGlvbiB1cGRhdGVJbWFnZVdpZHRoKCkge1xuICAgICAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICBjb250ZW50V2lkdGggPSAkcG9zdENvbnRlbnQub3V0ZXJXaWR0aCgpLCAvLyBXaWR0aCBvZiB0aGUgY29udGVudFxuICAgICAgICAgICAgICAgIGltYWdlV2lkdGggPSB0aGlzLm5hdHVyYWxXaWR0aDsgLy8gT3JpZ2luYWwgaW1hZ2UgcmVzb2x1dGlvblxuXG4gICAgICAgICAgICBpZiAoaW1hZ2VXaWR0aCA+PSBjb250ZW50V2lkdGgpIHtcbiAgICAgICAgICAgICAgICAkdGhpcy5hZGRDbGFzcygnZnVsbC1pbWcnKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgJHRoaXMucmVtb3ZlQ2xhc3MoJ2Z1bGwtaW1nJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgJGltZyA9ICQoXCIuc2luZ2xlLXBvc3QtaW5uZXIgaW1nXCIpLm9uKCdsb2FkJywgdXBkYXRlSW1hZ2VXaWR0aCk7XG5cbiAgICAgICAgZnVuY3Rpb24gY2FzcGVyRnVsbEltZygpIHtcbiAgICAgICAgICAgICRpbWcuZWFjaCh1cGRhdGVJbWFnZVdpZHRoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNhc3BlckZ1bGxJbWcoKTtcbiAgICB9LFxuXG4gICAgLyrnu5nmlofnq6DkuK3nmoR1cmzmt7vliqBpY29uZm9udOaWueS+v+ivhuWIqyovXG4gICAgdXJsSWNvbmxpemU6IGZ1bmN0aW9uKHVybCkge1xuICAgICAgICB2YXIgZG9tYWluLFxuICAgICAgICAgICAgX291dHB1dDtcbiAgICAgICAgdmFyIGljb25NYXAgPSB7IC8q57Si5byVIOWPr+WcqOi/memHjOa3u+WKoOWMuemFjeinhOWImSovXG4gICAgICAgICAgICAndHdpdHRlcic6ICdpY29uLXR3aXR0ZXInLFxuICAgICAgICAgICAgJ3F6b25lJzogJ2ljb24tcXpvbmUnLFxuICAgICAgICAgICAgJ3dlaWJvJzogJ2ljb24td2VpYm8nLFxuICAgICAgICAgICAgJ2ZhY2Vib29rJzogJ2ljb24tZmFjZWJvb2snLFxuICAgICAgICAgICAgJ2dpdGh1Yic6ICdpY29uLWdpdGh1YicsXG4gICAgICAgICAgICAnZG91YmFuJzogJ2ljb24tZG91YmFuJyxcbiAgICAgICAgICAgICdnb29nbGUnOiAnaWNvbi1nb29nbGUnLFxuICAgICAgICAgICAgJ2x1b2xlaSc6ICdpY29uLWx1b2xlaScsXG4gICAgICAgICAgICAnZHJpYmJsZSc6ICdpY29uLWRyaWJibGUnXG5cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIG5hbWUgaW4gaWNvbk1hcCkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBpY29uTWFwW25hbWVdICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgdmFyIE1hcEtleSA9IG5hbWU7XG4gICAgICAgICAgICAgICAgaWYgKHVybC5pbmRleE9mKE1hcEtleSkgPj0gMCkge1xuICAgICAgICAgICAgICAgICAgICBkb21haW4gPSBNYXBLZXk7XG4gICAgICAgICAgICAgICAgICAgIF9vdXRwdXQgPSBpY29uTWFwW01hcEtleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIF9vdXRwdXQ7XG4gICAgfSxcblxuICAgIGFkZEljb25zOiBmdW5jdGlvbigpIHtcbiAgICAgICAgLyrnu5nljZrlrqLmlofnq6DlnLDlnYB1cmzmt7vliqBpY2/or4bliKsqL1xuICAgICAgICAkKCcuc2luZ2xlLXBvc3QtaW5uZXIgcCBhOm5vdCg6aGFzKGltZykpJykuZWFjaChmdW5jdGlvbihpKSB7XG4gICAgICAgICAgICB2YXIgX3NyYyA9ICQodGhpcykuYXR0cignaHJlZicpO1xuICAgICAgICAgICAgdmFyIHRtcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgICAgICAgIHRtcC5ocmVmID0gX3NyYztcbiAgICAgICAgICAgIF9zZWxmRG9tYWluID0gdG1wLmhvc3RuYW1lO1xuICAgICAgICAgICAgR2VuZXJhbC51cmxJY29ubGl6ZShfc2VsZkRvbWFpbik7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhfc2VsZkRvbWFpbik7XG4gICAgICAgICAgICAvLyQodGhpcykuYXBwZW5kKHVybEljb25saXplKF9zZWxmRG9tYWluKSk7XG4gICAgICAgICAgICAkKHRoaXMpLnByZXBlbmQoJzxpIGNsYXNzPVwiaWNvbmZvbnQgJyArIEdlbmVyYWwudXJsSWNvbmxpemUoX3NlbGZEb21haW4pICsgJ1wiPjwvaT4nKTtcbiAgICAgICAgICAgIHZhciBfc2VsZkNvbG9yID0gJCh0aGlzKS5maW5kKCdpJykuY3NzKCdjb2xvcicpLFxuICAgICAgICAgICAgICAgIF9vcmlnaW5hbENvbG9yID0gJCh0aGlzKS5jc3MoJ2NvbG9yJyk7XG5cbiAgICAgICAgICAgIC8q6byg5qCH5oKs5rWu5pe2Ki9cbiAgICAgICAgICAgICQodGhpcykuaG92ZXIoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5jc3MoJ2NvbG9yJywgX3NlbGZDb2xvcik7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcygnYW5pbWF0ZWQgcHVsc2UnKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICQodGhpcykuY3NzKCdjb2xvcicsIF9vcmlnaW5hbENvbG9yKTtcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZUNsYXNzKCdhbmltYXRlZCBwdWxzZScpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8v5bmz5ruR5rua5Yqo5Yiw6aG26YOoXG4gICAgc2Nyb2xsVG9Qb3M6IGZ1bmN0aW9uKHBvc2l0aW9uKSB7XG4gICAgICAgIHZhciBTVFJfVE9fVE9QID0gJ+aIkeimgemjnuWIsOacgOmrmCcsXG4gICAgICAgICAgICBjb3ZlckhlaWdodCA9IHBvc2l0aW9uIHx8ICQod2luZG93KS5oZWlnaHQoKTsgLy/ojrflvpflm77niYfpq5jluqZcbiAgICAgICAgdmFyIGJ1dHRvbiA9ICQoJzxhIGhyZWY9XCIjXCIgaWQ9XCJ0by10b3BcIiB0aXRsZT1cIicgKyBTVFJfVE9fVE9QICsgJ1wiPiA8ZGl2IGNsYXNzPVwidG8tdG9wLXdyYXBcIj48L2Rpdj48L2E+JykuYXBwZW5kVG8oJ2JvZHknKTtcbiAgICAgICAgJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICgkKHdpbmRvdykuc2Nyb2xsVG9wKCkgPiAkKHdpbmRvdykuaGVpZ2h0KCkpIHtcbiAgICAgICAgICAgICAgICBidXR0b24uZmFkZUluKDUwMCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGJ1dHRvbi5mYWRlT3V0KDUwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGJ1dHRvbi5jbGljayhmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAkKCdodG1sLGJvZHknKS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICBzY3JvbGxUb3A6IGNvdmVySGVpZ2h0IC0gNTBcbiAgICAgICAgICAgIH0sIDEwMDAsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gJyMnO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn5oiR6LezJyk7XG4gICAgICAgIH0pXG4gICAgfSxcbiAgICAvL+WkhOeQhuWxj+W5leWPmOWMluaXtlxuICAgIHJlc2l6ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZpc3VhbENvbnRhaW5lcldpZGggPSAkKHdpbmRvdykud2lkdGgoKTtcbiAgICAgICAgLy8gY29udGVudFdpZHRoPSQoJy5wb3N0LWNvbnRlbnQnKS53aWR0aCgpO1xuICAgICAgICAvLyAkKCcuc2luZ2xlLXBvc3QtaW5uZXIgaW1nJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgLy8gICAgIHZhciBfaW1nID0gJCh0aGlzKTtcbiAgICAgICAgLy8gICAgIGNoZWNrSW1nKF9pbWcpO1xuICAgICAgICAvLyB9KVxuICAgIH1cblxuXG5cbn1cblxuXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcbiAgICBHZW5lcmFsLmluaXQoKTtcbiAgICBHZW5lcmFsLnVwZGF0ZUltYWdlV2lkdGgoKTtcbiAgICAvLyDliqDovb3lpJror7Tor4TorrpcbiAgICBEdW9zaHVvLmluaXQoKTtcblxuXG5cbiAgICAkKCcuc2luZ2xlLXBvc3QtaW5uZXIgcDpoYXMoaW1nKScpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBfdGhpcyA9ICQodGhpcyk7XG4gICAgICAgIF90aGlzLmFkZENsYXNzKCd3aXRoLWltZycpO1xuXG4gICAgICAgIGlmIChfdGhpcy5pc09uU2NyZWVuVmlzaWJsZSgpID09IHRydWUpIHtcbiAgICAgICAgICAgIF90aGlzLmFkZENsYXNzKCd3aXRoLWltZycpLmFkZENsYXNzKCdhbHJlYWR5LXZpc2libGUnKTtcbiAgICAgICAgfVxuXG4gICAgfSlcblxuXG5cblxuXG4gICAgJCgnLnBvc3QtaW4tbGlzdCcpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBfdGhpcyA9ICQodGhpcyk7XG4gICAgICAgIGlmIChfdGhpcy5pc09uU2NyZWVuVmlzaWJsZSgpID09IHRydWUpIHtcbiAgICAgICAgICAgIF90aGlzLmFkZENsYXNzKCdhbHJlYWR5LXZpc2libGUnKVxuICAgICAgICB9XG4gICAgfSlcbiAgICAkKCcuc2hhcmUgaDQnKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICAgICAgJCgnLnNoYXJlLWljb25zJykuY3NzKCdkaXNwbGF5JywgJ2Jsb2NrJykuYWRkQ2xhc3MoJ2ZhZGVJblVwQmlnIGFuaW1hdGVkJylcbiAgICAgICAgJCh0aGlzKS5mYWRlT3V0KDUwMCk7XG5cbiAgICAgICAgLy8gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgLy8gICAgICQoJ2h0bWwsYm9keScpLmFuaW1hdGUoe1xuICAgICAgICAvLyAgICAgICAgIHNjcm9sbFRvcDogJCgnI3NoYXJlLWljb25zJykub2Zmc2V0KCkudG9wIC0gJCh3aW5kb3cpLmhlaWdodCgpIC8gMlxuICAgICAgICAvLyAgICAgfSwgMTAwMCwgZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vICAgICAgICAgLy8gd2luZG93LmxvY2F0aW9uLmhhc2ggPSAnIyc7XG4gICAgICAgIC8vICAgICB9KTtcbiAgICAgICAgLy8gfSwgMTAwMClcblxuXG4gICAgfSlcblxuXG5cblxuICAgIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ3Bvc3QtdGVtcGxhdGUnKSkge1xuICAgICAgICAvLyBjb25zb2xlLmxvZygn5aSE55CG5Zu+5qCHJyk7XG4gICAgICAgICQoJ2ltZ1thbHQ9XCJjb3ZlclwiXScpLmFkZENsYXNzKCdjb3Zlci1pbWFnZScpO1xuICAgICAgICBHZW5lcmFsLmFkZEljb25zKCk7XG5cbiAgICAgICAgJCgnLmFycm93X2Rvd24nKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfkuIvmu5EnKTtcbiAgICAgICAgICAgICQoJ2h0bWwsYm9keScpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgIHNjcm9sbFRvcDogJCh3aW5kb3cpLmhlaWdodCgpIC0gMjBcbiAgICAgICAgICAgIH0sIDEwMDAsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIC8vIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gJyMnO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgaWYgKCQoJ2JvZHknKS5oYXNDbGFzcygnYXJjaGl2ZS10ZW1wbGF0ZScpIHx8ICQoJ2JvZHknKS5oYXNDbGFzcygnaG9tZS10ZW1wbGF0ZScpKSB7XG4gICAgICAgICQoJy5wb3N0LWV4Y2VycHQnKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gJCh0aGlzKTtcbiAgICAgICAgICAgIGlmIChfdGhpcy5oYXMoJ2ltZycpLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+ayoeacieWbvueJhycpO1xuICAgICAgICAgICAgICAgIF90aGlzLmFwcGVuZCgnPGltZyBzcmM9XCJodHRwczovL2x1b2xlaW9yZy5iMC51cGFpeXVuLmNvbS90bXAvbmV2LXNldC5qcGdcIj48L2ltZz4nKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnV2l0aCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuXG5cblxuICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgaWYgKCQod2luZG93KS5zY3JvbGxUb3AoKSA+IDUwKSB7XG4gICAgICAgICAgICAvLyAkKCcubmF2LWhlYWRlcicpLnJlbW92ZUNsYXNzKCdoaWRlJykuYWRkQ2xhc3MoJ2ZhZGVJbkRvd25CaWcgYW5pbWF0ZWQnKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCQoJy5zaGFyZS1pY29ucycpLmlzT25TY3JlZW5WaXNpYmxlKCkgPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICQoJy5zaGFyZS1pY29ucycpLnJlbW92ZUNsYXNzKCdmYWRlSW5VcEJpZyBhbmltYXRlZCcpLmNzcygnZGlzcGxheScsICdub25lJylcbiAgICAgICAgICAgICQoJy5zaGFyZSBoNCcpLmNzcygnZGlzcGxheScsICdibG9jaycpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCQoJ2JvZHknKS5oYXNDbGFzcygnYXJjaGl2ZS10ZW1wbGF0ZScpIHx8ICQoJ2JvZHknKS5oYXNDbGFzcygnaG9tZS10ZW1wbGF0ZScpKSB7XG4gICAgICAgICAgICAkKCcucG9zdC1pbi1saXN0JykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgX3RoaXMgPSAkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmIChfdGhpcy5pc09uU2NyZWVuVmlzaWJsZSgpID09IHRydWUgJiYgX3RoaXMuaGFzQ2xhc3MoJ2FscmVhZHktdmlzaWJsZScpICE9IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuYWRkQ2xhc3MoJ2ZhZGVJblVwQmlnIGFuaW1hdGVkJylcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gJCgnLnNpbmdsZS1wb3N0LWlubmVyIHA6aGFzKGltZyknKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyAgICAgdmFyIF90aGlzID0gJCh0aGlzKTtcbiAgICAgICAgLy8gICAgIGlmIChfdGhpcy5pc09uU2NyZWVuVmlzaWJsZSgpID09IHRydWUgJiYgX3RoaXMuaGFzQ2xhc3MoJ2FscmVhZHktdmlzaWJsZScpICE9IHRydWUpIHtcbiAgICAgICAgLy8gICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyAgICAgICAgICAgICBfdGhpcy5hZGRDbGFzcygnd2l0aC1pbWcnKTtcbiAgICAgICAgLy8gICAgICAgICB9LCAyMDApXG5cbiAgICAgICAgLy8gICAgIH1cbiAgICAgICAgLy8gfSlcblxuXG5cbiAgICB9KVxuXG59KVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9